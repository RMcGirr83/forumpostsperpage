<?xml version="1.0" encoding="UTF-8"?>
<project name="Extension Builder" description="Builds an extension.zip from a git repository" default="all">
    <property name="vendor-name" value="rmcgirr83" />
    <property name="extension-name" value="forumpostsperpage" />
    <!--
    Only set this to "true" if you have dependencies in the composer.json,
    otherwise use "false".
    -->
    <property name="has-dependencies" value="false" />

    <target name="clean-package">
        <!--
        Remove some unnecessary files/directories
        ${dir}/ is the folder of your extension, e.g. ext/nickvergessen/newspage/
        -->

        <delete file="${dir}/.gitignore" />
        <delete file="${dir}/.gitattributes" />
        <delete file="${dir}/.travis.yml" />
        <delete file="${dir}/build.xml" />
    </target>

    <!--
    TODO: DO NOT EDIT BELOW THIS LINE!!!!
    -->

    <property name="version" value="HEAD" override="true" />
    <property name="build-directory" value="build" override="true" />
    <property name="package-directory" value="${build-directory}/package/${vendor-name}/${extension-name}" />
    <property  name="phpbb-root" value="${build-directory}/../../../../../" />

    <!-- These are the main targets which you will probably want to use -->
    <target name="all" depends="prepare-structure,package" />

    <!--
    Clean up the build directory
    -->
    <target name="clean">
        <delete dir="${build-directory}" />
    </target>

    <target name="composer">
        <exec dir="${build-directory}/../"
              command="php composer.phar install"
              passthru="true" />
    </target>

    <target name="test" depends="clean,composer">
        <exec dir="${phpbb-root}"
              command="phpBB/vendor/bin/phpunit
              -c phpBB/ext/${vendor-name}/${extension-name}/"
              passthru="true" />
    </target>

    <target name="test-slow" depends="clean,composer">
        <exec dir="${phpbb-root}"
              command="phpBB/vendor/bin/phpunit
               -c phpBB/ext/${vendor-name}/${extension-name}/
               --group slow"
              passthru="true" />
    </target>

    <!--
    Recreate the necessary folders
    -->
    <target name="prepare-structure" depends="clean,composer,test,test-slow">
        <mkdir dir="${build-directory}" />
        <mkdir dir="${build-directory}/checkout" />
        <mkdir dir="${build-directory}/package" />
        <mkdir dir="${build-directory}/package/${vendor-name}" />
        <mkdir dir="${build-directory}/package/${vendor-name}/${extension-name}" />
        <mkdir dir="${build-directory}/upload" />
    </target>

    <!--
    The real packaging
    -->
    <target name="package">
        <echo msg="Extracting ${version}" />

        <phingcall target="git-checkout">
            <property name="archive-version" value="${version}" />
        </phingcall>

        <if>
            <equals arg1="${has-dependencies}" arg2="1" />
            <then>
                <exec dir="${package-directory}" command="php composer.phar install --no-dev"
                      checkreturn="true" />
            </then>
        </if>

        <phingcall target="clean-package">
            <property name="dir" value="${package-directory}" />
        </phingcall>

        <phingcall target="wrap-package">
            <property name="destination-filename" value="${build-directory}/upload/${vendor-name}_${extension-name}-${version}" />
        </phingcall>
    </target>

    <!--
    Checkout a given version and install/clean the dependencies
    -->
    <target name="git-checkout">
        <echo msg="Getting archive for ${archive-version}" />

        <exec command="git archive ${archive-version} --format zip --output ${build-directory}/checkout/${archive-version}.zip"
              checkreturn="true" />
        <unzip file="${build-directory}/checkout/${archive-version}.zip" todir="${package-directory}" />
    </target>

    <!--
    Create the zip and tar ball
    -->
    <target name="wrap-package">
        <echo msg="Creating archives (${vendor-name}/${extension-name} ${version})" />
        <zip basedir="${build-directory}/package/" destfile="${destination-filename}.zip" />
    </target>
</project>
